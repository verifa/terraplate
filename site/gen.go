package main

import (
	"bytes"
	"fmt"
	"log"
	"path/filepath"
	"strings"

	"github.com/spf13/cobra/doc"
	"github.com/verifa/terraplate/cmd"
)

func main() {
	genCLIDocs()
}

func genCLIDocs() {
	buf := new(bytes.Buffer)
	// file, openErr := os.Open("./site/content/docs/prologue/commands_gen.md")
	// if openErr != nil {
	// 	log.Fatal(openErr)
	// }
	err := doc.GenMarkdownTreeCustom(
		cmd.RootCmd,
		"./site/content/docs/commands",
		func(s string) string {
			filename := filepath.Base(s)
			name := filename[:len(filename)-len(filepath.Ext(filename))]
			name = strings.Join(strings.Split(name, "_"), " ")
			return fmt.Sprintf(`---
# # AUTOMATICALLY GENERATED BY COBRA (DO NOT EDIT)
title: "%s"
description: ""
lead: ""
date: 2020-10-13T15:21:01+02:00
lastmod: 2020-10-13T15:21:01+02:00
draft: false
images: []
menu:
  docs:
    parent: "commands"
toc: true
---
`, name)
		},
		func(s string) string {
			cmd := strings.Split(s, ".")[0]
			// Create relative link to other command pages
			return fmt.Sprintf("{{< relref \"%s\" >}}", cmd)
		},
	)
	if err != nil {
		log.Fatal(err)
	}

	fmt.Println(buf.String())
}
